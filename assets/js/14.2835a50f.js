(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{488:function(s,t,a){s.exports=a.p+"assets/img/uml-ratelimiter.8441be7b.png"},489:function(s,t,a){s.exports=a.p+"assets/img/ratelimiter-aquire-function.977c625f.jpg"},490:function(s,t,a){s.exports=a.p+"assets/img/ratelimiter-set-rate-function.76e430bb.jpg"},491:function(s,t,a){s.exports=a.p+"assets/img/unbelievable.0a93d187.jpg"},549:function(s,t,a){"use strict";a.r(t);var n=a(5),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("决定好好啃烂这块Guava的限流工具。\n本文基于分析guava-19.0代码撰写。\n下面先上一个简单的UML类图：")]),s._v(" "),n("p",[n("img",{attrs:{src:a(488),alt:"uml-ratelimiter.png"}})]),s._v(" "),n("p",[s._v("由上图可知，RateLimiter是顶层抽象类。主要有SmoothWarmingUp和SmoothBursty两种实现。")]),s._v(" "),n("h1",{attrs:{id:"ratelimiter"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ratelimiter"}},[s._v("#")]),s._v(" RateLimiter")]),s._v(" "),n("p",[s._v("RateLimiter 是一个抽象类，它主要由创建方法create、获取方法acquire组成。create根据入参不同，返回的是不同的子类，这昭示了它还是个工厂类。不过这种父类直接做工厂类的方式，我还是第一次见，感觉耦合有点重。")]),s._v(" "),n("h2",{attrs:{id:"类注释"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类注释"}},[s._v("#")]),s._v(" 类注释")]),s._v(" "),n("p",[s._v("一个限速器。\n从概念上讲，限速器将按照配置进行限速。acquire()方法是一个阻塞方法，调用该方法会一直阻塞到获得限速器许可通过。")]),s._v(" "),n("p",[s._v("限速器通常用于控制资源的访问速度，这与信号量(Semaphore)相反，信号量限制并发访问的数量而不是速率（请注意，并发性和速率密切相关, 参考"),n("a",{attrs:{href:"http://en.wikipedia.org/wiki/Little%27s_law",target:"_blank",rel:"noopener noreferrer"}},[s._v("Little's Law"),n("OutboundLink")],1),s._v("）。")]),s._v(" "),n("p",[s._v("限速器主要的核心是限制速率。如果没有其他配置，将以固定的速率（以每秒的放行数来定义）分配许可证。许可证将平稳分配，并调整各个许可证之间的延迟，以确保维持配置的速率。可以将RateLimiter配置为具有预热期，在此期间内，每秒发出的许可证将稳定增加，直到达到稳定速率为止。")]),s._v(" "),n("p",[s._v("比如，我们有一堆任务需要执行，但是我们不希望一秒钟执行超过其中的2个任务。代码可以这样写：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RateLimiter")]),s._v(" rateLimiter "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RateLimiter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// rate is "2 permits per second"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("submitTasks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" tasks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Executor")]),s._v(" executor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Runnable")]),s._v(" task "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" tasks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        rateLimiter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("acquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// may wait")]),s._v("\n        executor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("execute")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("task"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("又比如，假设我们产生了一个数据流，并且我们希望将其上限设置为每秒5kb。")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RateLimiter")]),s._v(" rateLimiter "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RateLimiter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// rate = 5000 permits per second")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("submitPacket")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" packet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    rateLimiter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("acquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("packet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    networkService"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("packet"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("重要的是要注意，所请求的许可永远不会影响请求本身的限制(如果速率限制是2，对aquire(1)的调用和对aquire(1000)的调用将导致完全相同的限制，都会被立刻放行)。但是会影响下一个请求，即，如果一个消耗很多速率的任务到达一个空闲的RateLimiter，它将立即被放行。但是下一个请求将受到限制，直到补足上一个放行导致的速率消耗。这叫"),n("strong",[s._v("先上车后补票")]),s._v("！")]),s._v(" "),n("p",[s._v("另外，RateLimiter不提供公平保证。")]),s._v(" "),n("h2",{attrs:{id:"sleepingstopwatch"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sleepingstopwatch"}},[s._v("#")]),s._v(" SleepingStopwatch")]),s._v(" "),n("p",[s._v("RateLimiter内部维持了一个同样是抽象的内部类SleepingStopwatch，用于计算时间流逝。这个类没有实现类，它是依靠createFromSystemTimer的无参静态方法直接返回一个匿名内部实现类出来供调用者使用。这个匿名内部类用StopWatch来作为计时工具，而StopWatch底层是通过System.nanoTime()来计时的。")]),s._v(" "),n("p",[s._v("StopWatch啥意思，你就把它当成秒表就行了，就是体育老师给我们测50米耗时，一按一个成绩的那种表。")]),s._v(" "),n("p",[s._v("我们看一下SleepingStopwatch的两个方法，sleepMicrosUninterruptibly和readMicros。")]),s._v(" "),n("h3",{attrs:{id:"sleepmicrosuninterruptibly"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sleepmicrosuninterruptibly"}},[s._v("#")]),s._v(" sleepMicrosUninterruptibly")]),s._v(" "),n("p",[s._v("底层是Thread.sleep方法，但是sleep过程不会响应中断。如果sleep过程中遇到中断， 先做个标记，sleep够时间后，再抛出中断。")]),s._v(" "),n("h3",{attrs:{id:"readmicros"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#readmicros"}},[s._v("#")]),s._v(" readMicros")]),s._v(" "),n("p",[s._v("此方法是利用Stopwatch实现类来实现的，返回流逝的时间，如下：")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Stopwatch")]),s._v(" stopwatch "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Stopwatch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("createStarted")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("readMicros")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" stopwatch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("elapsed")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MICROSECONDS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("调用此方法，需要在mutexDoNotUseDirectly的同步块内，防止时间的计算出现并发问题。")]),s._v(" "),n("h2",{attrs:{id:"重要方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#重要方法"}},[s._v("#")]),s._v(" 重要方法")]),s._v(" "),n("h3",{attrs:{id:"create"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#create"}},[s._v("#")]),s._v(" create")]),s._v(" "),n("p",[s._v("create方法是RateLimiter的工厂方法，用于返回对应的限速器。")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("create(double permitsPerSecond)")]),s._v(" 返回一个SmoothBursty类似令牌桶限速器。这个限速器以秒为周期，释放"),n("em",[s._v("permitsPerSecond")]),s._v("个许可，此为限速器的速率。如果没有请求的时候，限速器会先预存1秒的许可(permitsPerSecond个)。当突发大流量来的时候(超过预存)，先放行，后续的请求将被要求等待足够长的时间，以弥补之前突发造成的速率不均衡问题，达到平滑过度("),n("em",[s._v("译者感觉不是很平滑，如果前一个请求远远超过速率，后续请求会被限制得死死的，只不过是先上车后补票罢了，和一些贫困地区先借钱给天价彩礼，然后一辈子打工还钱颇有异曲同工之妙")]),s._v(")。")]),s._v(" "),n("li",[n("strong",[s._v("create(double permitsPerSecond, long warmupPeriod, TimeUnit unit)")]),s._v(" 返回一个具有热身功能的，SmoothWarmingUp限速器。根据指定的稳定吞吐率和预热期来创建RateLimiter，这里的吞吐率是指每秒多少许可数（通常是指QPS，每秒多少查询）。在预热时间内，RateLimiter每秒分配的许可数会平稳地增长直到预热期结束时达到其最大速率（只要存在足够请求数来使其饱和）。同样地，如果RateLimiter 在warmupPeriod时间内闲置不用，它将会逐步地返回冷却状态。也就是说，它会像它第一次被创建般经历同样的预热期。返回的RateLimiter 主要用于那些需要预热期的资源，这些资源实际上满足了请求（比如一个远程服务），而不是在稳定（最大）的速率下可以立即被访问的资源。")])]),s._v(" "),n("p",[s._v("create方法会调用静态方法createFromSystemTimer创建一个新的秒表(SleepingStopWatch)配合限速器使用。")]),s._v(" "),n("h3",{attrs:{id:"acquire"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#acquire"}},[s._v("#")]),s._v(" acquire")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[s._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("acquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("permits")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 检查要等多久才能获得足够的许可")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" microsToWait "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("reserve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("permits")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 无中断地sleep")]),s._v("\n    stopwatch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleepMicrosUninterruptibly")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("microsToWait"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回阻塞了多久才获得通过，单位秒")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" microsToWait "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" SECONDS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("toMicros")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1L")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("记住这是个阻塞方法，先计算需要阻塞多久才能获得足够许可，这里说的获得足够许可指的是填满之前的坑，因为都是先上车后补票的。\n最后调用sleepMicrosUninterruptibly方法休眠后返回。")]),s._v(" "),n("h3",{attrs:{id:"reserve"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reserve"}},[s._v("#")]),s._v(" reserve")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[s._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("reserve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("permits")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("checkPermits")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("permits")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 简单检查一下，permits > 0即可")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mutex")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//获取到互斥量，也就是锁。mutex()方法是一个经典的完美的单例方法，感兴趣的可以看一下源码")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// stopwatch.readMicros获取秒表开始到现在流逝了多久")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("reserveAndGetWaitLength")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("permits")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" stopwatch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("readMicros")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("reserve方法看起来没有做什么逻辑，我们继续往下看reserveAndGetWaitLength。")]),s._v(" "),n("h3",{attrs:{id:"reserveandgetwaitlength"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reserveandgetwaitlength"}},[s._v("#")]),s._v(" reserveAndGetWaitLength")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[s._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("reserveAndGetWaitLength")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("permits")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" nowMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" momentAvailable "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("reserveEarliestAvailable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("permits")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nowMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("momentAvailable "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" nowMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("这个方法也很简单，就是计算之前的所有请求消耗了多久的时间momentAvailable(速率一定后，时间就是许可证的数量)，然后momentAvailable - nowMicros就是还需要等待多久能填平之前的坑。当然具体是填平之前的坑，还是把这次也算上，得看函数reserveEarliestAvailable是怎么实现的，很遗憾的是，这是个抽象方法，RateLimiter没有实现。")]),s._v(" "),n("h3",{attrs:{id:"tryacquire"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tryacquire"}},[s._v("#")]),s._v(" tryAcquire")]),s._v(" "),n("p",[s._v("我们直接看最底层的*public boolean tryAcquire(int permits, long timeout, TimeUnit unit)*方法好了，其他tryAquire都是对它的参数组织调用。")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tryAcquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("permits")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" timeout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),s._v(" unit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" timeoutMicros "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("toMicros")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("timeout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("checkPermits")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("permits")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" microsToWait"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mutex")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" nowMicros "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" stopwatch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("readMicros")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//按一下秒表，看过了多久了")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("canAcquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nowMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" timeoutMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 判断是否能获取到permits个许可")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//很明显不能")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        microsToWait "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("reserveAndGetWaitLength")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("permits")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nowMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 那就计算一下还需要阻塞多久能通行")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    stopwatch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleepMicrosUninterruptibly")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("microsToWait"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//无中断地休眠够(速率定了后，足够的时间就是足够的许可证)")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[s._v("这个函数，是acquire的补充。tryAcquire先判断在一定时间内能否获取到足够的许可，不行的话，直接返回false了，不会进入阻塞。")]),s._v(" "),n("p",[s._v("canAcquire只有一行，很简单，不展开讲。它里面只有queryEarliestAvailable方法值得关注，但是也是抽象的。queryEarliestAvailable和reserveEarliestAvailable一样，是关于定义怎么样才算抹平之前的事儿的函数，需要在具体算法中具体实现。")]),s._v(" "),n("p",[s._v("最后，关于rate的设置也还有几个函数，如"),n("strong",[s._v("doSetRate")]),s._v("和"),n("strong",[s._v("doGetRate")]),s._v("，但是他们都是抽象类，后面再看了。\n至此，RateLimiter代码阅读完毕，这里总结一下：")]),s._v(" "),n("ol",[n("li",[s._v("用秒表来计时，底层用的是System.nanoTime()")]),s._v(" "),n("li",[s._v("通过速率，实现了时间和许可证的转换，通过sleep换取足够的许可证产出。")]),s._v(" "),n("li",[s._v("注意sleep是后响应中断的(后响应的意思是中断的时候继续睡，睡完了在把中断抛出，本文作者定义)。")]),s._v(" "),n("li",[s._v("有一些工厂构造函数，会初始化一个秒表配合限速器一起用")]),s._v(" "),n("li",[s._v("有一些获取许可的方法，分为阻塞和半阻塞")]),s._v(" "),n("li",[s._v("有一些设置和获取速率的抽象方法")])]),s._v(" "),n("h1",{attrs:{id:"smoothratelimiter"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#smoothratelimiter"}},[s._v("#")]),s._v(" SmoothRateLimiter")]),s._v(" "),n("p",[s._v("SmoothRateLimiter还是一个抽象类，不过它里面有两个实现类。")]),s._v(" "),n("h2",{attrs:{id:"how-is-the-ratelimiter-designed-and-why"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#how-is-the-ratelimiter-designed-and-why"}},[s._v("#")]),s._v(" How is the RateLimiter designed, and why?")]),s._v(" "),n("p",[s._v("先硬翻一下这一大坨。")]),s._v(" "),n("p",[s._v('RateLimiter的主要特点是它的“稳定速率”，即在正常条件下应允许的最大速率。 这是通过按照配置对传入请求进行”掐晕"来实现的，比如一个请求过来了，参考配置的速率，转换为需要等待的时间，然后把这个请求的线程“掐晕”足够久后才放行。')]),s._v(" "),n("p",[s._v("假设速率要求QPS=n，那么维持速率最简单方法是保留最后一个准予请求的时间戳，并确保自此之后已经经过了1/n秒即可再次放行。 例如，对于QPS = 5（每秒5个许可）的速率，如果我们确保在最后一个请求之后1/5秒，即200ms后批准请求，则可以达到预期的速率。 如果有一个请求到来，而上一个请求是100毫秒前被批准的，那么我们将再等待100毫秒后就可以批准当前请求了。 以这种速度，服务15个新许可证（即，对于acquire（15）请求）需要3秒。")]),s._v(" "),n("p",[s._v("重要的是，这样的RateLimiter具有非常简单的逻辑：它只需记住最后一个请求即可。 如果RateLimiter长时间未使用，然后一个请求到达需要立刻批准放行吗？ 如果这样，这个RateLimiter在过去一段时间并非充分利用了。 这可能会导致利用率不足或溢出，具体取决于RateLimiter在达不到速率峰值时是如何处理的。")]),s._v(" "),n("p",[s._v("过去未充分利用可能意味着资源的浪费。因此，RateLimiter应该加大放行，以利用这些资源。 当速率应用于网络（按总流量收费）时，这一点很重要，过去的未充分利用通常会转化为“不用即将作废”，可以立刻刷高清把它用完。("),n("em",[s._v("这句我也不知道怎么翻译了，我觉得这样翻译比较合适")]),s._v(")\n另一方面，过去未充分利用可能意味着“负责处理该请求的服务器对未来的处理还没准备好”，例如其缓存已过期，请求更有可能触发复杂的操作（一个更极端的例子是指服务器刚刚启动时，它几乎正忙于启动初始化工作）。")]),s._v(" "),n("p",[s._v("为了应对这些场景，我们增加了一个思考的维度，即“过去的未充分利用”，也就是“storedPermits”。当利用充分时，此变量为零。当未利用充分的场景出现的时候，它可以增长到maxStoredPermits。这种情形下，通过调用acquire(permits)请求的获得的许可可能来自以下两个地方：")]),s._v(" "),n("ul",[n("li",[s._v("-储存的许可证（如果有储存）")]),s._v(" "),n("li",[s._v("-新许可证（当前速率可以满足发放的许可证）")])]),s._v(" "),n("p",[s._v("用一个例子最好地解释它是如何工作的：")]),s._v(" "),n("p",[s._v("对于每秒产生1个许可的RateLimiter，如果没有使用，我们将storedPermits每秒加1。假设我们将RateLimiter闲置10秒钟（即第一个请求10秒后才来），storedPermits变为10.0（假设maxStoredPermits> = 10.0）。 此时，acquire(3)的请求到达，我们将storedPermits-3，请求通过(时间和许可如何转换，我们后面讨论)。然后，假设一个aquire(10)的请求抵达，先消耗掉storedPermits中剩余的7，剩下的3个许可，将用速率器产生来满足。")]),s._v(" "),n("p",[s._v("我们知道为3个新许可证提供服务需要花费多少时间：如果费率为“每秒1个许可”，那么这将需要3秒钟。但是，送达7个存储的许可证意味着什么？如上所述，没有唯一的答案。如果我们对处理前期未充分利用的资源比较感兴趣，那么我们希望先消耗存储好的许可证再去发放新的。因为未充分利用=可以免费获取资源。如果我们主要对处理溢出感兴趣，那么要优先发放新的许可。 因此，我们需要一个函数，能够在不同场景下将storedPermits转换为时间("),n("em",[s._v("这里时间是指许可证和时间之间转换的时间，比如产生一个新的许可证需要200ms")]),s._v(")。")]),s._v(" "),n("p",[s._v("这个函数就是"),n("strong",[s._v("storedPermitsToWaitTime(double storedPermits, double permitsToTake)")]),s._v("。底层模型是一个连续映射的函数，将storedPermits和1/"),n("strong",[s._v("rate")]),s._v("有效地关联起来。\n"),n("strong",[s._v("storedPermits")]),s._v("实质上衡量未使用的时间，我们将闲置的时间购买或者说存储许可证。"),n("strong",[s._v("rate")]),s._v("是“许可/时间”，因此“ 1/"),n("strong",[s._v("rate")]),s._v("=时间/许可”。 因此，“ 1/"),n("strong",[s._v("rate")]),s._v("”（时间/许可）乘以“许可”得到的时间，即此函数的积分（storagePermitsToWaitTime（）计算出来的）对应于后续请求之间的最小间隔。")]),s._v(" "),n("p",[s._v("下面是一个"),n("strong",[s._v("storedPermitsToWaitTime")]),s._v("函数的示例。如果storedPermits == 10.0，并且我们要3个许可证，我们从storedPermits中获取它们，并将storedPermits置为7.0。\n然后调用"),n("em",[s._v("storagePermitsToWaitTime(10.0，3.0)")]),s._v("，将计算7.0到10.0的积分。("),n("em",[s._v("这段快翻译崩溃了")]),s._v(")")]),s._v(" "),n("p",[s._v("使用积分可以保证{acquire(3)}和{acquire(1);acquire(1);acquire(1)}或者{acquire(2); acquire(1);}都是等价的。因为是什么积分函数，对于[7.0, 10.0]和[7.0, 8.0], [8.0, 9.0], "),n("a",{attrs:{href:"%E7%AD%89%E7%AD%89%E4%BE%8B%E5%AD%90"}},[s._v("9.0, 10.0")]),s._v("处理结果应该是一样的。这样可以保证我们能够正确处理各种权重（许可）的请求，无论实际功能是什么-因此我们可以自由地调整后者。 （显然，唯一的要求是我们可以计算出其相同的积分）。")]),s._v(" "),n("p",[s._v("请注意，如果为此功能选择一个转换率为(1 / QPS)，则该函数没有意义：我们以与新服务完全相同的成本提供存储的许可(1/QPS 是每个的费用)。我们稍后使用此技巧。")]),s._v(" "),n("p",[s._v("如果我们选择的函数低于该转换率，则意味着我们减少了该函数的面积，从而减少了时间。因此，在一段时间未充分使用之后，RateLimiter发放许可证的速度会变快。\n相反地，如果我们选择的函数是高于该转换率，那么这意味着面积（时间）增加，因此存储的许可证比新许可证的成本更高，因此，RateLimiter在一段时间未充分利用后，发放许可证的速度会变慢。")]),s._v(" "),n("p",[s._v("最后，但并非不重要的一点是，考虑一个RateLimiter，其速率为每秒1个许可，前期一直没有请求，然后突然acquire(100)，此时等待100秒后放行是毫无意义的。为何什么都不做只是傻傻地等呢？更好的处理方式是，首先立即允许该请求的最大值（就好像先允许acquire(1)通过），然后按照速率控制推迟后续99个请求。在当前的版本实现中，我们允许立即放行aquire(100)，并将后续来的第一个请求推迟100秒，因此我们允许请求在后续的推迟期间工作，而不是闲着等待。")]),s._v(" "),n("p",[s._v("这意味着RateLimiter不会记住_last_ request请求的时间，但是会记住_next_request请求的（等待）时间。\n这也要求我们能立刻知道（请参阅*tryAcquire(timeout)*函数）指定的超时时间是否足以使我们这批请求得以通过。我们认为的"),n("strong",[s._v("未充分利用的RateLimiter")]),s._v("有了以下的定义：当我们观察到“下一个请求的预期到达时间”实际上是过去时，则差值(now - past)就是RateLimiter未利用的，通过storedPermits转换出来的时间。（我们将在该空闲时间内产生的许可证数量加到storedPermits）。因此，如果rate==(1秒产生1个许可)，然后请求1秒来一个，则storedPermits不会增加。我们只会在请求超过1秒都没有到来才会增加storedPermits。")]),s._v(" "),n("p",[s._v("好了，硬翻完毕，还是得结合代码才能看得懂function的含义。")]),s._v(" "),n("h2",{attrs:{id:"smoothbursty"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#smoothbursty"}},[s._v("#")]),s._v(" SmoothBursty")]),s._v(" "),n("p",[s._v("先来研究这个简单一点的实现类SmoothBursty，看名字就很矛盾的感觉，又平顺又突发的。平顺我们在RateLimiter知道了，就是先上车后补票，后面的把之前的坑填完，那么突发是什么意思呢？")]),s._v(" "),n("p",[s._v("SmoothBursty实现了“突发式” RateLimiter，其中storedPermits转换为0节流。 在这种情况下，从时间上定义了可以保存的最大许可数量（未使用RateLimiter时）：如果RateLimiter为2qps，并且此时间指定为10秒，则我们最多可以保存2 * 10 = 20个许可证。所以，突发的意思应该就是为了应对突发，保存有一定的许可证/令牌量。")]),s._v(" "),n("h3",{attrs:{id:"smoothbursty-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#smoothbursty-2"}},[s._v("#")]),s._v(" SmoothBursty")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[s._v("    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SmoothBursty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SleepingStopwatch")]),s._v(" stopwatch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" maxBurstSeconds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stopwatch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("maxBurstSeconds "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" maxBurstSeconds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("先看构造函数，只需要关注maxBurstSeconds参数，它在RateLimiter的create工厂方法中，硬编码传了个1.0，也就是说只保留1秒的令牌/许可。")]),s._v(" "),n("p",[s._v("有了构造函数后，我们会开始调用aquire()方法，前面零零碎碎看了一些方法，我们这次串联起一个完整流程来。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(489),alt:"ratelimiter-aquire-function.jpg"}})]),s._v(" "),n("p",[s._v("大部分方法都分析过了，下面只需要分析reserveEarliestAvailable、resync和storedPermitsToWaitTime方法，即可把这个调用链路打通。")]),s._v(" "),n("h3",{attrs:{id:"reserveearliestavailable"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reserveearliestavailable"}},[s._v("#")]),s._v(" reserveEarliestAvailable")]),s._v(" "),n("p",[s._v("还记得在分析RateLimiter遗留的函数不，这个就是其中之一，计算最早啥时候能开始继续接受请求的。另外一个也一并说了吧，queryEarliestAvailable，他其实就是直接返回nextFreeTicketMicros。\n"),n("strong",[s._v("reserveEarliestAvailable")]),s._v("主要还更新了一下nextFreeTicketMicros。")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[s._v("  "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("reserveEarliestAvailable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" requiredPermits"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" nowMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("resync")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nowMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//根据当前时间更新storedPermits和nextFreeTicketMicros")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" returnValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nextFreeTicketMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 接下来计算要消耗的库存许可")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" storedPermitsToSpend "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("requiredPermits"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("storedPermits"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 计算出需要新增产生的许可数目")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" freshPermits "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" requiredPermits "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" storedPermitsToSpend"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// storedPermitsToWaitTime函数很关键，设计一个转换比率的问题，不过SmoothBursty直接返回0，就是1:1交换了")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" waitMicros "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("storedPermitsToWaitTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("storedPermits"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" storedPermitsToSpend"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("freshPermits "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" stableIntervalMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//计算新的下一次自由通行的时间")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nextFreeTicketMicros "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LongMath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("checkedAdd")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nextFreeTicketMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" waitMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArithmeticException")]),s._v(" e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("nextFreeTicketMicros "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MAX_VALUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("storedPermits "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-=")]),s._v(" storedPermitsToSpend"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//更新库存")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这个返回值很关键哈，它代表了一种思想，就是先上车后补票，这次算出的nextFreeTicketMicros。它不理会！")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" returnValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("h3",{attrs:{id:"resync"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#resync"}},[s._v("#")]),s._v(" resync")]),s._v(" "),n("p",[s._v("根据当前时间戳更新storedPermits和nextFreeTicketMicros，在reserveEarliestAvailable和doSetRate中会调用到的函数，你可以理解为一个状态主动更新的实现。")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[s._v("    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("resync")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" nowMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果 nextFreeTicket 在过去了, 那么需要立刻刷新")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nowMicros "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" nextFreeTicketMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      storedPermits "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("maxPermits"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n          storedPermits\n            "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nowMicros "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" nextFreeTicketMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("coolDownIntervalMicros")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      nextFreeTicketMicros "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nowMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("storedPermits的计算方式需要注意一下，里面有一个增量的计算。\ncoolDownIntervalMicros")]),s._v(" "),n("h3",{attrs:{id:"smoothbursty的storedpermitstowaittime方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#smoothbursty的storedpermitstowaittime方法"}},[s._v("#")]),s._v(" SmoothBursty的storedPermitsToWaitTime方法")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[s._v("    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("storedPermitsToWaitTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" storedPermits"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" permitsToTake"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0L")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("这里返回的是0，返回0后，在前面reserveEarliestAvailable方法计算waitMicros的时候，等式就变成了\n"),n("em",[s._v("long waitMicros = (long) (freshPermits * stableIntervalMicros);")]),s._v("\n也就是完全计算freshPermits所需要的等待时间而已了。")]),s._v(" "),n("p",[s._v("aquire流程介绍完毕。\n接下来看一下setRate的流程。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(490),alt:"ratelimiter-set-rate-function.jpg"}})]),s._v(" "),n("h3",{attrs:{id:"dosetrate-double-permitspersecond-long-nowmicros"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dosetrate-double-permitspersecond-long-nowmicros"}},[s._v("#")]),s._v(" doSetRate(double permitsPerSecond, long nowMicros)")]),s._v(" "),n("p",[s._v("先来看一个两种实现都会用的的SmoothRateLimiter抽象类的一个函数")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 入参nowMicros是在父抽象类RateLimiter的setRate传入的，其实就是拿了秒表的流逝时间，就是秒表启动到现在的时间，单位秒")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// permitsPerSecond就不用解释了，就是qps嘛")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("doSetRate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" permitsPerSecond"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" nowMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("resync")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nowMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//根据当前时间更新storedPermits和nextFreeTicketMicros")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" stableIntervalMicros "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" SECONDS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("toMicros")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1L")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" permitsPerSecond"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//转换成了获得1个许可需要等多久，这个就是速率转换成量的概念，也就是速率保存的地方")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("stableIntervalMicros "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" stableIntervalMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("doSetRate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("permitsPerSecond"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" stableIntervalMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h3",{attrs:{id:"dosetrate-double-permitspersecond-double-stableintervalmicros"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dosetrate-double-permitspersecond-double-stableintervalmicros"}},[s._v("#")]),s._v(" doSetRate(double permitsPerSecond, double stableIntervalMicros)")]),s._v(" "),n("p",[s._v("这个函数就得是SmoothBursty内部的实现函数了，它在SmoothRateLimiter抽象类也是抽象的。")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[s._v("    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("doSetRate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" permitsPerSecond"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" stableIntervalMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" oldMaxPermits "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("maxPermits"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//storedPermits的最大值")]),s._v("\n      maxPermits "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" maxBurstSeconds "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" permitsPerSecond"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//计算新的storedPermits")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldMaxPermits "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Double")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("POSITIVE_INFINITY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果我们不对此进行特殊处理，则将在下面获得storedPermits为null")]),s._v("\n        storedPermits "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" maxPermits"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        storedPermits "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("oldMaxPermits "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 初始值")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" storedPermits "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" maxPermits "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" oldMaxPermits"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("p",[s._v("主要是更新了一下maxPermits和storedPermits。")]),s._v(" "),n("h3",{attrs:{id:"dogetrate"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dogetrate"}},[s._v("#")]),s._v(" doGetRate")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[s._v("  "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("doGetRate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" SECONDS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("toMicros")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1L")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" stableIntervalMicros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("讲一下这个函数是因为doSetRate函数里，讲到stableIntervalMicros就是速率转换成每个许可证发放需要多久的时间。\n这里用1秒除以它就是速率啦。")]),s._v(" "),n("p",[s._v("至此，SmoothBursty就分析完毕了，它比较简单，是一个有一定库存来应对突发的类似令牌桶的算法实现。")]),s._v(" "),n("h2",{attrs:{id:"smoothwarmingup"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#smoothwarmingup"}},[s._v("#")]),s._v(" SmoothWarmingUp")]),s._v(" "),n("p",[s._v("接下来我们研究一个复杂一点的，SmoothWarmingUp，平顺升温类。平顺不说了，关键是如何升温。")]),s._v(" "),n("p",[s._v("先翻译类说明。")]),s._v(" "),n("h3",{attrs:{id:"类注释-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类注释-2"}},[s._v("#")]),s._v(" 类注释")]),s._v(" "),n("p",[s._v("下面函数的实现公式是：coldInterval = coldFactor * stableInterval")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('          ^ throttling\n          |\n    cold  +                  /\n interval |                 /.\n          |                / .\n          |               /  .  <-- "warmup period" is the area of the trapezoid \n          |              /   .       between thresholdPermits and maxPermits\n          |             /    .\n          |            /     .\n          |           /      .\n   stable +----------/  WARM .\n interval |          .   UP  .\n          |          . PERIOD.\n          |          .       .\n        0 +----------+-------+--------------\x3e storedPermits\n          0 thresholdPermits maxPermits\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("在详细介绍此函数之前，让我们牢记以下基本知识：")]),s._v(" "),n("ol",[n("li",[s._v("RateLimiter（storedPermits）的状态在此图中是一条垂直线。")]),s._v(" "),n("li",[s._v("当RateLimiter没有请求时，向右走，上升（ < maxPermits）")]),s._v(" "),n("li",[s._v("当RateLimiter有请求时，该值将逐渐左移（下降到零），因为如果我们有storedPermits，先消耗storedPermits。")]),s._v(" "),n("li",[s._v("当RateLimiter没有请求时，我们以一定的速度向右上升！ 我们向右移动的速率选择为 maxPermits/warmupPeriod 。这样可确保从0到maxPermits花费的时间等于warmupPeriod。")]),s._v(" "),n("li",[s._v("当RateLimiter有请求时，如上面介绍的那样，时间等于函数的积分，在X和X-K个请求许可之间，假设我们要消耗掉K个storedPermits。")])]),s._v(" "),n("p",[s._v("总而言之，向左移动的时间（花费K个许可）等于width == K的函数的面积。")]),s._v(" "),n("p",[s._v("假设需求已经饱和，则从maxPermits到thresholdPermits的时间等于warmupPeriod，从thresholdPermits变为0的时间是warmupPeriod/2 。（之所以选择warmupPeriod / 2，是为了保持coldFactor=3这个原始的硬编码实现。）")]),s._v(" "),n("p",[s._v("它仍然可以计算thresholdsPermits和maxPermits。")]),s._v(" "),n("ul",[n("li",[n("ul",[n("li",[n("p",[s._v("从thresholdPermits变为0的时间等于函数在0和thresholdPermits之间的积分，也就是thresholdPermits * stableIntervals的值。根据上面第5点，它也等于warmupPeriod/2。因此，")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("thresholdPermits = 0.5 * warmupPeriod / stableInterval.\n")])])])])])]),s._v(" "),n("li",[n("ul",[n("li",[n("p",[s._v("从maxPermits到thresholdPermits的时间等于thresholdPermits和maxPermits之间函数的积分。是如图所示的梯形的面积，等于")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("0.5 *（stableInterval + coldInterval）*（maxPermits-thresholdPermits）\n")])])]),n("p",[s._v("它也等于warmupPeriod，因此：")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("maxPermits = thresholdPermits + 2 * warmupPeriod /（stableInterval + coldInterval）。\n")])])])])])])]),s._v(" "),n("hr"),s._v(" "),n("p",[s._v("上面是类注解，我反正不怎么看得懂，我看了一些别的文章和代码后，尝试去理解他们之间的关系。")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("入参肯定有两个参数permitsPerSecond和warmupPeriod")])]),s._v(" "),n("li",[n("p",[s._v("stableInterval = 1 / permitsPerSecond")])]),s._v(" "),n("li",[n("p",[s._v("coldInterval = 3 * stableInterval, 这是代码写死的，在create工厂方法创建SmoothWarmingUp的时候，传入的coldFactor=3")])]),s._v(" "),n("li",[n("p",[s._v("上面的理论假设了warnUpPeriod = 2 * stableInterval * thresholdPermits，如果非要用积分这个词的话，那就是0到thresholdPermits的积分(面积)只有thresholdPermits到maxPermits的积分的一半。")])]),s._v(" "),n("li",[n("p",[s._v("好，我们分开来看，左边是一个矩形，右边是一个梯形，他们有2倍面积差的关系，然后矩形的上边长是stableInterval，下边长是3*stableInterval")])]),s._v(" "),n("li",[n("p",[s._v("warmupPeriod就是右边梯形的面积，基于5，求thresholdPermits和maxPermits的值，是不是可以算出来了")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v(" thresholdPermits = 0.5 * warmupPeriod / stableInterval\n maxPermits = thresholdPermits + 2 * warmupPeriod /（stableInterval + coldInterval）\n")])])])])]),s._v(" "),n("p",[s._v("根据注释可知，maxPermits是指最大可以储存的Permits，也就是storedPermits的最大值。")]),s._v(" "),n("p",[s._v("好了，搞清楚这些面积啊，数值啊之间的关系，我们再去看函数，看看饶了这么大一圈，Dimitris Andreou到底想干啥。")]),s._v(" "),n("h3",{attrs:{id:""}},[n("a",{staticClass:"header-anchor",attrs:{href:"#"}},[s._v("#")])]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[s._v("   "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("storedPermitsToWaitTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" storedPermits"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" permitsToTake"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" availablePermitsAboveThreshold "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" storedPermits "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" thresholdPermits"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" micros "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// measuring the integral on the right part of the function (the climbing line)")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("availablePermitsAboveThreshold "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" permitsAboveThresholdToTake "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("availablePermitsAboveThreshold"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" permitsToTake"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        micros "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("permitsAboveThresholdToTake\n            "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("permitsToTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("availablePermitsAboveThreshold"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("permitsToTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("availablePermitsAboveThreshold "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" permitsAboveThresholdToTake"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        permitsToTake "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-=")]),s._v(" permitsAboveThresholdToTake"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// measuring the integral on the left part of the function (the horizontal line)")]),s._v("\n      micros "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stableIntervalMicros "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" permitsToTake"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" micros"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("permitsToTime")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("permits")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" stableIntervalMicros "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("permits")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" slope"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[s._v("这两个最难理解的函数，放在这里了，slope是斜坡的倾斜度。我没有看懂。")]),s._v(" "),n("h1",{attrs:{id:"测试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[s._v("#")]),s._v(" 测试")]),s._v(" "),n("p",[s._v("正面看不懂，我们侧面看吧，用测试的结果来进一步理解作者设计的思想。")]),s._v(" "),n("h2",{attrs:{id:"首先测试smoothbursty"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#首先测试smoothbursty"}},[s._v("#")]),s._v(" 首先测试SmoothBursty")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[s._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n         * 创建一个限流器，设置每秒放出的许可数：2个，也就是QPS=2。\n         * 返回的RateLimiter对象是SmoothBursty的实现类，可以保证1秒内不会给超过2个许可，并且是固定速率的放置。达到平滑输出的效果\n         */")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RateLimiter")]),s._v(" r "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RateLimiter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("acquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("这段代码的输出是：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.485539")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.489328")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.49861")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.496905")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.495262")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.499083")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.498672")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.496875")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.498624")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("从输出看，可以看到第一个请求没有阻塞，之后的请求，大都阻塞半秒。符合预期。\n那我们先让这个SmoothBursty准备好看看，让它先储蓄好一些许可先。")]),s._v(" "),n("h3",{attrs:{id:"加个sleep"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#加个sleep"}},[s._v("#")]),s._v(" 加个sleep")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[s._v("        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RateLimiter")]),s._v(" r "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RateLimiter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 提前准备好2个，测试burst特性，也就是'先上车后买票'特性")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("acquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("输出：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.487055")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.494545")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.49719")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.499253")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.499159")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.49972")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.496689")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("休眠2秒，储备了2个，也符合预期。")]),s._v(" "),n("h2",{attrs:{id:"测试smoothwarmingup"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试smoothwarmingup"}},[s._v("#")]),s._v(" 测试SmoothWarmingUp")]),s._v(" "),n("p",[s._v("SmoothWarmingUp前面没读懂怎么个预热法，看看测试能不能帮助理解。")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[s._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n         * 创建一个限流器，设置每秒放出的许可数：2个，也就是QPS=2。\n         * 返回的RateLimiter对象是SmoothWarmingUp的实例，可以保证1秒内不会给超过2个许可，并且是固定速率的放置。达到平滑输出的效果\n         * 设置缓冲时间为5秒，请注意这个参数，后面观察输出用得上\n         */")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RateLimiter")]),s._v(" r "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RateLimiter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SECONDS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("acquire")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("输出：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.396888")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.197031")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.995187")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.796951")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.59458")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.495011")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.494586")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.497255")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.495937")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.499545")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.497426")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("第一行输出0.0我们很容易理解，‘先上车后买票’嘛")]),s._v(" "),n("p",[s._v("2~6行这5个输出之后，才达到匀速，并且这5个输出加起来刚好等于设置的热身时间5秒左右。\n"),n("img",{attrs:{src:a(491),alt:"unbelievable.jpg"}})]),s._v(" "),n("p",[n("strong",[s._v("难道这就是WarmingUp的终极含义？")])]),s._v(" "),n("p",[s._v("等待的时间逐步减少，意味着许可证发放的速度逐步提高，就跟比赛前热热身一样，热身好后，就可以正常输出了。这种功能适合系统刚启动需要一点时间来“热身”的场景。")]),s._v(" "),n("ol",[n("li",[n("a",{attrs:{href:"https://ifeve.com/guava-ratelimiter/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Guava官方文档-RateLimiter类"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://guava.dev/releases/19.0/api/docs/index.html?com/google/common/util/concurrent/RateLimiter.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Class RateLimiter"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://blog.csdn.net/prestigeding/article/details/105180419",target:"_blank",rel:"noopener noreferrer"}},[s._v("源码分析RateLimiter SmoothWarmingUp 实现原理(文末附流程图)"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://blog.csdn.net/zc529739024/article/details/78744876",target:"_blank",rel:"noopener noreferrer"}},[s._v("开发高并发系统时保护系统的三把利器：缓存、降级和限流"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);